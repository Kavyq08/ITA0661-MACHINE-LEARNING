import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.datasets import make_regression
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error

X, y = make_regression(n_samples=100, n_features=1, noise=20, random_state=42)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

lr = LinearRegression()
lr.fit(X_train, y_train)
y_pred_lr = lr.predict(X_test)

poly = PolynomialFeatures(degree=3)
X_poly_train = poly.fit_transform(X_train)
X_poly_test = poly.transform(X_test)

pr = LinearRegression()
pr.fit(X_poly_train, y_train)
y_pred_pr = pr.predict(X_poly_test)

mse_lr = mean_squared_error(y_test, y_pred_lr)
mse_pr = mean_squared_error(y_test, y_pred_pr)

print(f"Linear Regression Mean Squared Error: {mse_lr}")
print(f"Polynomial Regression Mean Squared Error: {mse_pr}")

plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred_lr, color='red', label='Linear Regression')
plt.plot(X_test, y_pred_pr, color='green', label='Polynomial Regression')
plt.legend()
plt.show()
